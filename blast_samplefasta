***
Notes:
#issue: format of fasta file we're given doesn't indicate the title of each fasta with a ">" so it's misreading it as part of the sequence

#the values we get are below, need to extract the ID
#also  need to set the e value threshold with an except
<Hit>
  <Hit_num>47</Hit_num>
  <Hit_id>gi|610516984|dbj|AP013088.1|</Hit_id>
  <Hit_def>Equus caballus mitochondrial DNA, complete genome, isolate: MO2</Hit_def>
  <Hit_accession>AP013088</Hit_accession>
  <Hit_len>16656</Hit_len>
  <Hit_hsps>
    <Hsp>
      <Hsp_num>1</Hsp_num>
      <Hsp_bit-score>4329.37</Hsp_bit-score>
      <Hsp_score>4800</Hsp_score>
      <Hsp_evalue>0</Hsp_evalue>
      <Hsp_query-from>5</Hsp_query-from>
      <Hsp_query-to>4674</Hsp_query-to>
      <Hsp_hit-from>3047</Hsp_hit-from>
      <Hsp_hit-to>7711</Hsp_hit-to>
      <Hsp_query-frame>1</Hsp_query-frame>
      <Hsp_hit-frame>1</Hsp_hit-frame>
      <Hsp_identity>3778</Hsp_identity>
      <Hsp_positive>3778</Hsp_positive>
      <Hsp_gaps>25</Hsp_gaps>
      <Hsp_align-len>4680</Hsp_align-len>
      <Hsp_qseq>
***

#go into correct directory and start python
python

#Get biopython running and check version
import Bio
print(Bio.__version__)

# Need to obtain a BLAST XML output, we use "except" to set an e-value threshold
from Bio.Blast import NCBIWWW
fasta_string = open("test.fasta").read()
result_output = NCBIWWW.qblast("blastn", "nt", fasta_string)
print result_output.read()


# Once we have the XML output we use BLAST XML to handle it
# So this will produce a useful output
from Bio.Blast import NCBIXML
readinresult=open("blast_anoC.xml","r")
records= NCBIXML.parse(readinresult)
item=next(records)

for alignment in item.alignments:
  for hsp in alignment.hsps:
    if hsp.expect < 0.01:
      print('****Alignment****')
      print('sequence:', alignment.title)
      print('length:', alignment.length)
      print('score:', hsp.score)
      print('gaps:', hsp.gaps)
      print(hsp.query[0:90] + '...')
      print(hsp.match[0:90] + '...')
      print(hsp.sbjct[0:90] + '...')